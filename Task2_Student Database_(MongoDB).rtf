{\rtf1\ansi\ansicpg1252\cocoartf2639
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 > use taskdb\
> db.createCollection("students")\
> mongoimport --db taskdb --collection students --file Users/OmkarDesai/Documents/Guvi/Tasks/Task2/students.json\
> db.students.find().sort(\{'exam': -1, 'quiz': -1, 'homework': -1\}).limit(1).pretty()\
> var passMark = 40\
> var averageExamScore = db.students.aggregate([\{$group: \{_id: null, avg: \{$avg: "$exam"\}\}\}]).toArray()[0].avg\
> db.students.find(\{exam: \{$lt: averageExamScore\}, exam: \{$lt: passMark\}\})\
> db.students.updateMany(\{exam: \{$lt: passMark\}\}, \{$set: \{exam: "fail"\}\})\
> db.students.updateMany(\{exam: \{$gte: passMark\}\}, \{$set: \{exam: "pass"\}\})\
> db.students.updateMany(\{quiz: \{$lt: passMark\}\}, \{$set: \{quiz: "fail"\}\})\
> db.students.updateMany(\{quiz: \{$gte: passMark\}\}, \{$set: \{quiz: "pass"\}\})\
> db.students.updateMany(\{homework: \{$lt: passMark\}\}, \{$set: \{homework: "fail"\}\})\
> db.students.updateMany(\{homework: \{$gte: passMark\}\}, \{$set: \{homework: "pass"\}\})\
> var total = db.students.aggregate([\{$group:\{_id:null, total:\{$sum: \'93$exam + $quiz + $homework\'94\}\}\}])\
> var total = db.students.aggregate([\{$group:\{_id:null, avg:\{$sum: \'93$exam + $quiz + $homework\'94\}\}\}])\
> db.totals.insert(\{total: total.total, avg:avg.avg\})\
> db.createCollection("below_average_above_pass")\
> db.students.find(\{exam: \{$lt: averageExamScore\}, exam: \{$gte: passMark\}, quiz: \{$gte: passMark\}, homework: \{$gte: passMark\}\}).forEach(function(doc) \{\
    db.below_average_above_pass.insert(doc)\
\})\
> db.createCollection(\'93below\'94_fail_mark\'94)\
> db.students.find(\{exam: \{$lt: passMark\}, quiz: \{$lt: passMark\}, homework: \{$lt: passMark\}\}).forEach(function(doc) \{\
    db.below_fail_mark(doc)\
\})\
> db.createCollection(\'93above_fail_mark\'94)\
> db.students.find(\{exam: \{$gt: passMark\}, quiz: \{$gt: passMark\}, homework: \{$gt: passMark\}\}).forEach(function(doc) \{\
    db.above_fail_mark(doc)\
\})\
\
\
}